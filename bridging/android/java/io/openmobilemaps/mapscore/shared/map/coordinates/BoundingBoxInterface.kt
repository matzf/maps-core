// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from coordinate_system.djinni

package io.openmobilemaps.mapscore.shared.map.coordinates

import com.snapchat.djinni.NativeObjectManager
import java.util.concurrent.atomic.AtomicBoolean

abstract class BoundingBoxInterface {

    companion object {
        @JvmStatic
        external fun create(systemIdentifier: Int): BoundingBoxInterface
    }

    abstract fun addPoint(p: Coord)

    abstract fun asRectCoord(): RectCoord

    abstract fun getCenter(): Coord

    abstract fun getMin(): Coord

    abstract fun getMax(): Coord

    abstract fun getSystemIdentifier(): Int

    public class CppProxy : BoundingBoxInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
            NativeObjectManager.register(this, nativeRef)
        }

        companion object {
            @JvmStatic
            external fun nativeDestroy(nativeRef: Long)
        }

        override fun addPoint(p: Coord) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_addPoint(this.nativeRef, p)
        }
        private external fun native_addPoint(_nativeRef: Long, p: Coord)

        override fun asRectCoord(): RectCoord {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_asRectCoord(this.nativeRef)
        }
        private external fun native_asRectCoord(_nativeRef: Long): RectCoord

        override fun getCenter(): Coord {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getCenter(this.nativeRef)
        }
        private external fun native_getCenter(_nativeRef: Long): Coord

        override fun getMin(): Coord {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getMin(this.nativeRef)
        }
        private external fun native_getMin(_nativeRef: Long): Coord

        override fun getMax(): Coord {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getMax(this.nativeRef)
        }
        private external fun native_getMax(_nativeRef: Long): Coord

        override fun getSystemIdentifier(): Int {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getSystemIdentifier(this.nativeRef)
        }
        private external fun native_getSystemIdentifier(_nativeRef: Long): Int
    }
}
