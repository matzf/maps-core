// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from coordinate_system.djinni

package io.openmobilemaps.mapscore.shared.map.coordinates

import com.snapchat.djinni.NativeObjectManager
import java.util.concurrent.atomic.AtomicBoolean

abstract class CoordinateConverterInterface {

    abstract fun convert(coordinate: Coord): Coord

    abstract fun getFrom(): Int

    abstract fun getTo(): Int

    public class CppProxy : CoordinateConverterInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
            NativeObjectManager.register(this, nativeRef)
        }

        companion object {
            @JvmStatic
            external fun nativeDestroy(nativeRef: Long)
        }

        override fun convert(coordinate: Coord): Coord {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_convert(this.nativeRef, coordinate)
        }
        private external fun native_convert(_nativeRef: Long, coordinate: Coord): Coord

        override fun getFrom(): Int {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getFrom(this.nativeRef)
        }
        private external fun native_getFrom(_nativeRef: Long): Int

        override fun getTo(): Int {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getTo(this.nativeRef)
        }
        private external fun native_getTo(_nativeRef: Long): Int
    }
}
