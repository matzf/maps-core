// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from exception_logger.djinni

package io.openmobilemaps.mapscore.shared.utils

import com.snapchat.djinni.NativeObjectManager
import java.util.concurrent.atomic.AtomicBoolean

abstract class ExceptionLoggerDelegateInterface {

    abstract fun logMessage(errorDomain: String, code: Int, customValues: HashMap<String, String>, function: String, file: String, line: Int)

    public class CppProxy : ExceptionLoggerDelegateInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
            NativeObjectManager.register(this, nativeRef)
        }

        companion object {
            @JvmStatic
            external fun nativeDestroy(nativeRef: Long)
        }

        override fun logMessage(errorDomain: String, code: Int, customValues: HashMap<String, String>, function: String, file: String, line: Int) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_logMessage(this.nativeRef, errorDomain, code, customValues, function, file, line)
        }
        private external fun native_logMessage(_nativeRef: Long, errorDomain: String, code: Int, customValues: HashMap<String, String>, function: String, file: String, line: Int)
    }
}
